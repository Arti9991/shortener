// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/storage/storage.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/Arti9991/shortener/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockStorFunc is a mock of StorFunc interface.
type MockStorFunc struct {
	ctrl     *gomock.Controller
	recorder *MockStorFuncMockRecorder
}

// MockStorFuncMockRecorder is the mock recorder for MockStorFunc.
type MockStorFuncMockRecorder struct {
	mock *MockStorFunc
}

// NewMockStorFunc creates a new mock instance.
func NewMockStorFunc(ctrl *gomock.Controller) *MockStorFunc {
	mock := &MockStorFunc{ctrl: ctrl}
	mock.recorder = &MockStorFuncMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorFunc) EXPECT() *MockStorFuncMockRecorder {
	return m.recorder
}

// CloseDB mocks base method.
func (m *MockStorFunc) CloseDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CloseDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseDB indicates an expected call of CloseDB.
func (mr *MockStorFuncMockRecorder) CloseDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseDB", reflect.TypeOf((*MockStorFunc)(nil).CloseDB))
}

// Delete mocks base method.
func (m *MockStorFunc) Delete(keys []string, UserID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", keys, UserID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockStorFuncMockRecorder) Delete(keys, UserID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStorFunc)(nil).Delete), keys, UserID)
}

// Get mocks base method.
func (m *MockStorFunc) Get(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockStorFuncMockRecorder) Get(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStorFunc)(nil).Get), key)
}

// GetOrig mocks base method.
func (m *MockStorFunc) GetOrig(val string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrig", val)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrig indicates an expected call of GetOrig.
func (mr *MockStorFuncMockRecorder) GetOrig(val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrig", reflect.TypeOf((*MockStorFunc)(nil).GetOrig), val)
}

// GetUser mocks base method.
func (m *MockStorFunc) GetUser(UserID, BaseAdr string) (models.UserBuff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", UserID, BaseAdr)
	ret0, _ := ret[0].(models.UserBuff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockStorFuncMockRecorder) GetUser(UserID, BaseAdr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockStorFunc)(nil).GetUser), UserID, BaseAdr)
}

// Ping mocks base method.
func (m *MockStorFunc) Ping() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping")
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockStorFuncMockRecorder) Ping() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockStorFunc)(nil).Ping))
}

// Save mocks base method.
func (m *MockStorFunc) Save(key, val, UserID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", key, val, UserID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockStorFuncMockRecorder) Save(key, val, UserID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockStorFunc)(nil).Save), key, val, UserID)
}

// SaveTx mocks base method.
func (m *MockStorFunc) SaveTx(InURLs models.InBuff, BaseAdr string) (models.OutBuff, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTx", InURLs, BaseAdr)
	ret0, _ := ret[0].(models.OutBuff)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveTx indicates an expected call of SaveTx.
func (mr *MockStorFuncMockRecorder) SaveTx(InURLs, BaseAdr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTx", reflect.TypeOf((*MockStorFunc)(nil).SaveTx), InURLs, BaseAdr)
}
